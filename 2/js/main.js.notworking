var game = new Phaser.Game(640, 360, Phaser.AUTO);
var GameState = {
	preload: function(){
		//uses id, src
		this.load.image('background', 'assets/images/background.png');
		this.load.image('chicken', 'assets/images/chicken.png');
		this.load.image('horse', 'assets/images/horse.png');
		this.load.image('pig', 'assets/images/pig.png');
		this.load.image('sheep', 'assets/images/sheep3.png');
		this.load.image('arrow', 'assets/images/arrow.png');
		//console.log('images loaded');
	
	
	
	},
	create: function() {
		
		this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
		
		this.scale.pageAlignHorizontally = true;
		this.scale.pageAlignVertically = true;

	//	this.scale.setScreenSize(true);
		
		this.background = this.game.add.sprite(0, 0, 'background');

		
		var animalData = [
			{key: 'chicken', text: 'CHICKEN'},
			{key: 'horse', text: 'HORSE'},
			{key: 'pig', text: 'PIG'},
			{key: 'sheep', text: 'SHEEP'}
		];
		console.log(animalData);
		
		this.animals = this.game.add.group();


		alert("test");

		var self = this;
		var animal;

		//this refers to the object we are currently in, so I'm assuming at the moment that that is create() but when we are working in another function the scope chagnes.

		animalData.forEach(function(element){

			animal = self.animals.create(-1000, self.game.world.centerY, element.key );
			animal.anchor.setTo(0.5);
			animal.customParams = {text: element.text};


			animal.inputEnabled = true;
			animal.input.pixelPerfectClick = true;
			animal.events.onInputDown.add(self.animateAnimal, self);

		
		});



		this.currentAnimal = this.animals.next();
		this.currentAnimal.position.set(this.game.world.centerX, this.game.world.centerY);

		//next and previous are methods for phaser groups, they iterate over a group
		this.currentAnimal = this.animals.next();

		this.rightArrow = this.game.add.sprite(580, this.game.world.centerY, 'arrow');
		this.rightArrow.anchor.setTo(0.5);
		this.rightArrow.customParams = {direction: 1};
	
		this.leftArrow = this.game.add.sprite(60, this.game.world.centerY, 'arrow');
		this.leftArrow.scale.x = -1;
		this.leftArrow.anchor.setTo(0.5);
		this.leftArrow.customParams = {direction: 1};	

		//Allow user input
		this.leftArrow.inputEnabled = true;
		this.leftArrow.input.pixelPerfectClick = true;
		this.leftArrow.events.onInputDown.add(this.switchAnimal, this);

		this.rightArrow.inputEnabled = true;
		this.rightArrow.input.pixelPerfectClick = true;
		this.rightArrow.events.onInputDown.add(this.switchAnimal, this);
			


	},
	update: function() {
	},
	switchAnimal: function( sprite, event){
		//Function should be moving horse, but seems to be interacting solely with the next item which is pig. Will try to fix this later tonight
		//At M2 - switching animals	
		console.log("Switch animal");	
		var newAnimal, endX;
		//1. get direction of the arrorw
		if(sprite.customParams.direction > 0) {
			newAnimal = this.animals.next();
			endX = 640 + this.currentAnimal.width/2;
		}
		else {
			newAnimal = this.animals.previous();	
			endX = -this.currentAnimal.width/2;
		}
		//console.log(this.currentAnimal);
		//console.log(this.newAnimal);
		
		this.currentAnimal.x = endX;
			
		//2. get next animal
		
		//3. get final destination of current animal
		
		//4. move current animal to final destination
		
		//5. set the next animal as the new current animal
		
			},
	animateAnimal: function(sprite, event){
		console.log("Animate animal");
	}
};
game.state.add('GameState', GameState);
game.state.start('GameState');

